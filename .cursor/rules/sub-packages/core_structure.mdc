---
description: 
globs: 
alwaysApply: true
---
# Purpose
`fin_statement_model.core` is the **foundation** of the library.  It provides the graph
engine, base node hierarchy, calculation engine, metric registry, and core utilities.
Everything else (`statements/`, `io/`, `forecasting/`, _etc._) depends **on** core; core
never imports from those higher layers.

# Exception Hierarchy
All exceptions must extend from `FinStatementModelError`:
```python
class FinStatementModelError(Exception):
    """Base exception for all fin_statement_model errors."""
    pass

class GraphError(FinStatementModelError):
    """Errors related to graph operations."""
    pass

class CalculationError(FinStatementModelError):
    """Errors during calculation execution."""
    pass

class MetricError(FinStatementModelError):
    """Errors related to metric definitions or registry."""
    pass
```

# Type System
- Core may use numpy arrays and pandas Series/DataFrames where beneficial.  Prefer plain Python types for simple data structures, but numpy / pandas are now first‑class dependencies.

# Directory Responsibilities
| Sub‑package / module                 | Responsibility                                                         |
|--------------------------------------|------------------------------------------------------------------------|
| `core/graph/`                        | Pure graph algorithms: traversal, manipulation, IO                     |
| `core/metrics/`                      | Metric YAML, Python classes & `registry.py`                            |
| `core/nodes/`                        | Core node code for all node types, including forecast nodes            |
| `core/strategies`                    | Calculation strategies like Addition, Subtraction                      |
| `calculation_engine.py`              | Orchestrates evaluation of the graph                                   |
| `node_factory.py`                    | Dynamic node instantiation from YAML/JSON                              |
| `data_manager.py`                    | In‑memory store / caching layer                                        |
| `calculation_engine.py`              | Manages calculation nodes and performs calculations on financial data. |
| `errors.py`                          | Core‑level exceptions.  Extend `FinStatementModelError`                |