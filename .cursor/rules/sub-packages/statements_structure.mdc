---
description: 
globs: 
alwaysApply: true
---
# Purpose
The `statements` layer wraps the core graph engine with **domain‑specific helpers** for
working with financial statements (Balance Sheet, P&L, Cash‑flow, etc.).  It provides:
* Declarative statement schemas & configs
* Builders/factories that construct node graphs from those schemas
* Human‑friendly formatting & presentation utilities
* General utility functions specific to statement manipulation

# Layer Position & Dependencies
- It **may import from**:
    - `fin_statement_model.core` (e.g., base node types, graph manipulation)
    - `fin_statement_model.preprocessing` (e.g., apply standard transformations when building)
- It **must NOT be imported by**:
    - `fin_statement_model.core`
    - `fin_statement_model.preprocessing`
- It **can be imported by**:
    - `fin_statement_model.io` (e.g., for statement-specific reading/writing schemas)
    - `fin_statement_model.extensions`

# Coding Conventions
- Follow general project coding standards (black, ruff, mypy, Google docstrings).
- Focus on statement-level abstractions and logic. Avoid embedding core graph algorithms or direct I/O operations here.
